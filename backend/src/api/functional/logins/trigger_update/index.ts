/**
 * @packageDocumentation
 * @module api.functional.logins.trigger_update
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import typia from "typia";

/**
 * @controller UserLoginController.triggerStatsUpdate
 * @path POST /logins/trigger-update
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function triggerStatsUpdate(
  connection: IConnection,
): Promise<triggerStatsUpdate.Output> {
  return true === connection.simulate
    ? triggerStatsUpdate.simulate(connection)
    : PlainFetcher.fetch(connection, {
        ...triggerStatsUpdate.METADATA,
        template: triggerStatsUpdate.METADATA.path,
        path: triggerStatsUpdate.path(),
      });
}
export namespace triggerStatsUpdate {
  export type Output = { message: string };

  export const METADATA = {
    method: "POST",
    path: "/logins/trigger-update",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/logins/trigger-update";
  export const random = (): { message: string } =>
    typia.random<{ message: string }>();
  export const simulate = (_connection: IConnection): Output => {
    return random();
  };
}
